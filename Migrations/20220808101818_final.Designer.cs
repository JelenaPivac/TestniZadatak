// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestniZadatak.Data;

#nullable disable

namespace TestniZadatak.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220808101818_final")]
    partial class final
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestniZadatak.Models.Article", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("measurementUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("TestniZadatak.Models.ArticleAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("articleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("definitionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("articleId");

                    b.HasIndex("definitionId");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("TestniZadatak.Models.AttributeDefinition", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("AttributeDefinitions");
                });

            modelBuilder.Entity("TestniZadatak.Models.LoginValidation", b =>
                {
                    b.Property<string>("token")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("isValid")
                        .HasColumnType("bit");

                    b.HasKey("token");

                    b.ToTable("TokenValidation");
                });

            modelBuilder.Entity("TestniZadatak.Models.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TestniZadatak.Models.Article", b =>
                {
                    b.HasOne("TestniZadatak.Models.User", null)
                        .WithMany("articles")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TestniZadatak.Models.ArticleAttribute", b =>
                {
                    b.HasOne("TestniZadatak.Models.Article", null)
                        .WithMany("attributes")
                        .HasForeignKey("articleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TestniZadatak.Models.AttributeDefinition", "definition")
                        .WithMany()
                        .HasForeignKey("definitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("definition");
                });

            modelBuilder.Entity("TestniZadatak.Models.AttributeDefinition", b =>
                {
                    b.HasOne("TestniZadatak.Models.User", null)
                        .WithMany("attributeDefinitions")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TestniZadatak.Models.Article", b =>
                {
                    b.Navigation("attributes");
                });

            modelBuilder.Entity("TestniZadatak.Models.User", b =>
                {
                    b.Navigation("articles");

                    b.Navigation("attributeDefinitions");
                });
#pragma warning restore 612, 618
        }
    }
}
